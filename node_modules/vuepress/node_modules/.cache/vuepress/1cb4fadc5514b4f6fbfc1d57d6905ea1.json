{"remainingRequest":"/Users/study/my-blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/study/my-blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/study/my-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/study/my-blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/study/my-blog/docs/blog/2.md?vue&type=template&id=6f8309c2&","dependencies":[{"path":"/Users/study/my-blog/docs/blog/2.md","mtime":1574524544000},{"path":"/Users/study/my-blog/node_modules/cache-loader/dist/cjs.js","mtime":1580964447261},{"path":"/Users/study/my-blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1580964450105},{"path":"/Users/study/my-blog/node_modules/cache-loader/dist/cjs.js","mtime":1580964447261},{"path":"/Users/study/my-blog/node_modules/vue-loader/lib/index.js","mtime":1580964450105},{"path":"/Users/study/my-blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1580964447251}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"css常用布局方案-——-双栏布局\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#css常用布局方案-——-双栏布局\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" CSS常用布局方案 —— 双栏布局\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"img\", {\n          attrs: {\n            src: require(\"../.vuepress/public/image/css.png\"),\n            alt: \"An image\"\n          }\n        })\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            '<!DOCTYPE html>\\n<html lang=\"en\" dir=\"ltr\">\\n    <head>\\n        <meta charset=\"utf-8\">\\n        <title>双栏布局</title>\\n    <style>\\n        .case {\\n            padding: 10px;\\n            margin: 20px;\\n            border: 1px solid #eee;\\n        }\\n        \\n        .left {\\n            float: left;\\n        }\\n\\n        .right {\\n            float: right;\\n        }\\n\\n        .clearfix::after {\\n            content: \\' \\';\\n            display: block;\\n            clear: both;\\n        }\\n\\n        .column-left {\\n            width: 200px;\\n            background: lightblue;\\n        }\\n\\n        .column-right {\\n            width: 400px;\\n            background: lightpink;\\n        }\\n\\n        /* 这里通过 BFC 的方式来解决 float 的问题, \\n           具体可以查看 http://www.iyunlu.com/view/css-xhtml/55.html \\n        */\\n        .bfc {\\n            overflow: hidden;\\n        }\\n\\n        /* 具体可以查看 http://www.iyunlu.com/view/css-xhtml/64.html */\\n\\n        /* 注意 inline-block 会有一定的缝隙, 可以通过下面的方式解决,\\n           先在父元素上面通过把 letter-spacing 设置为负值, 然后把 inline-block 元素设置为正常值\\n           当然这里的 -5px 是和文字大小有关系的, 具体看上面的链接\\n        */\\n        .inline-block-row {\\n            letter-spacing: -5px;\\n        }\\n\\n        .inline-block {\\n            display: inline-block;\\n            letter-spacing: normal;\\n        }\\n\\n        /* 注意, 尽管 table 不是用来布局而是用来展示数据的, 但是这里为了演示所以直接用了\\n           并且没有使用 table 标签, 而是通过 display 的 table 值来设置的\\n        */\\n        .table-row {\\n            display: table-row;\\n        }\\n\\n        .table-cell {\\n            display: table-cell;\\n        }\\n\\n        .position-row {\\n            position: relative;\\n            height: 100px;\\n            background: lightgray;\\n        }\\n\\n        .position-left {\\n            position: absolute;\\n            left: 0;\\n            top: 0;\\n        }\\n\\n        .position-right {\\n            position: absolute;\\n            /* 这里的 400 是左边 column 的宽度 */\\n            left: 400px;\\n            top: 0;\\n        }\\n\\n        /*\\n        除了这些布局方案，还有 css3 的 flex 和 grid 也完全可以实现两栏布局, 而这些是 css3 之前的经典布局方案\\n        其中 bfc 和 table 完全可以用来实现流式布局(即一边固定宽度, 另一边的宽度随着页面宽度的变化而变化)\\n        */\\n    </style>\\n</head>\\n<body>\\n    <div class=\"case\">\\n        <h3>float 方案 1</h3>\\n        <div class=\"row clearfix\">\\n            <div class=\"left column-left\">\\n                left\\n            </div>\\n            <div class=\"left column-right\">\\n                right\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\"case\">\\n        <h3>float 方案 2</h3>\\n        <div class=\"row clearfix\">\\n            <div class=\"left column-left\">\\n                left\\n            </div>\\n            <div class=\"column-right bfc\">\\n                right\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\"case\">\\n        <h3>inline block 方案</h3>\\n        <div class=\"row inline-block-row\">\\n            <div class=\"inline-block column-left\">\\n                left\\n            </div>\\n            <div class=\"inline-block column-right\">\\n                right\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\"case\">\\n        <h3>table 方案</h3>\\n        <div class=\"row table-row\">\\n            <div class=\"table-cell column-left\">\\n                left\\n            </div>\\n            <div class=\"table-cell column-right\">\\n                right\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\"case\">\\n        <h3>position 方案</h3>\\n        <div class=\"position-row\">\\n            <div class=\"position-left column-left\">\\n                left\\n            </div>\\n            <div class=\"position-right column-right\">\\n                right\\n            </div>\\n        </div>\\n    </div>\\n</body> \\n</html>      \\n'\n          )\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}